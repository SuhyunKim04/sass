$msg : "hello";
$color : "red";
$defaultUrl : '../images/';

.box1 {
    background-color:unquote($color);
}
 
@debug unquote($msg);
// @debug quote(hello);

@mixin icon($url, $size) {
    background-image:url($defaultUrl + $url);
     
}

.box2 {
    @include icon('icons/a.jpg', 30px);
}

.box3 {
    color:yellow !important;
}

#box3 {
    color:blue;
}


$color1 : red;
$width : 140px;
$color2 : tomato;
.box4 {
    $color1 : blue !default;
    $width: 300px !default;
    $height : 300px !default;
    width:$width;
    height:$height;
    color:$color1;

} 
 

.box5 {
    color:$color1;
    background-color:$color2;
    $color2 : dodgerblue !global;
    // $color3 : mix($color1, $color2) !global; 
}
 
.box6 {
    background-color:$color2;
    // background-color:mix(red, blue, 10%);
    // background-color:mix($color1, $color3);
} 


$colors : red, green, blue;
$modal : (
    bg : red,
    width : 100%,
    height: 400px,
    max-width: 600px
);
 

$headers : (
    top: red,
    middle: green,
    bottom: blue, 
);

$line : (
    light : 0.2,
    md : 0.5,
    dark :0.9
);


.box {
    border:1px solid rgba(black, map-get($line, light));
}
// border:1px solid rgba($line, 0.01);
.wrap {
    background-color:rgba(255,0,0,0.7);
    background-color:rgba(red, 0.7);
    $color : rgba(orange, 0.5);
    background-color:alpha($color);
    background-color:opacity($color);
}

@each $key, $header in $headers {
    .header-#{$key} { 
        background-color: $header
    }
}


.modal {
    background-color:map-get($modal, bg);
    width:map-get($modal, width);
}


/*
.header-top { background-color: red}
.header-middle { background-color: green}
.header-bottom { background-color: blue}
*/

/*
^ start
$ end 
~ include
*/

div[title="hello"] {
    background-color:red;
    font-size:100px;
}

a[href^='http'] {
    font-size:100px;
}

img {
    border:5px solid black;
}
img[src$=".png"] {
    border-color:red;
}

@each $color in $colors {
    @debug $color;
}

@each $key, $value in $modal {
    @debug $value;
    .#{$key} {
        background-color:$value;
    }
}

.wrap {
    @each $key, $value in $headers {
        @debug $key, $value;
        div[data-type=#{$key}] {
            background-color:$value;
        }
    }
}

$fruits :'banana','melon';
$size : 30px, 40px;

.box7 {
    background-color: nth($colors, -1);
    $new : append($fruits, $size);
    @debug $new;
    $count : index($fruits, 'melon');
    &:nth-child(#{$count}) {
        color:red;
    }
}

$imgList : 'alert','profile','logout','login';

@for $i from 1 through length($imgList) {
    li:nth-child(#{$i}) {
        background-image:url(nth($imgList, $i) + '.png')
    }
}

/*
@debug nth(10px 12px 16px, 2);
@debug nth($colors, -2);
*/