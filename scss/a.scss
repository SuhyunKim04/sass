@use 'sass:math';

$msg : "hello";
$color : "red";
$defaultUrl : '../images/';
$imageUrl : '../images/';
.box1 {
    background-color:unquote($color);
}
 
@debug unquote($msg);
// @debug quote(hello);

@mixin icon($url, $size) {
    background-image:url($defaultUrl + $url);
     
}

.box2 {
    @include icon('icons/a.jpg', 30px);
}

.box3 {
    color:yellow !important;
}

#box3 {
    color:blue;
}


$color1 : red;
$width : 140px;
$color2 : tomato;
.box4 {
    $color1 : blue !default;
    $width: 300px !default;
    $height : 300px !default;
    width:$width;
    height:$height;
    color:$color1;

} 
 

.box5 {
    color:$color1;
    background-color:$color2;
    $color2 : dodgerblue !global;
    // $color3 : mix($color1, $color2) !global; 
}
 
.box6 {
    background-color:$color2;
    // background-color:mix(red, blue, 10%);
    // background-color:mix($color1, $color3);
} 


$colors : red, green, blue;
$modal : (
    bg : red,
    width : 100%,
    height: 400px,
    max-width: 600px
);
 

$headers : (
    top: red,
    middle: green,
    bottom: blue, 
);

$line : (
    light : 0.2,
    md : 0.5,
    dark :0.9
);


.box {
    border:1px solid rgba(black, map-get($line, light));
}
// border:1px solid rgba($line, 0.01);
.wrap {
    background-color:rgba(255,0,0,0.7);
    background-color:rgba(red, 0.7);
    $color : rgba(orange, 0.5);
    background-color:alpha($color);
    background-color:opacity($color);
}

@each $key, $header in $headers {
    .header-#{$key} { 
        background-color: $header
    }
}


.modal {
    background-color:map-get($modal, bg);
    width:map-get($modal, width);
}


/*
.header-top { background-color: red}
.header-middle { background-color: green}
.header-bottom { background-color: blue}
*/

/*
^ start
$ end 
~ include
*/

div[title="hello"] {
    background-color:red;
    font-size:100px;
}

a[href^='http'] {
    font-size:100px;
}

img {
    border:5px solid black;
}
img[src$=".png"] {
    border-color:red;
}

@each $color in $colors {
    @debug $color;
}

@each $key, $value in $modal {
    @debug $value;
    .#{$key} {
        background-color:$value;
    }
}

.wrap {
    @each $key, $value in $headers {
        @debug $key, $value;
        div[data-type=#{$key}] {
            background-color:$value;
        }
    }
}

$fruits :'banana','melon';
$size : 30px, 40px;

.box7 {
    background-color: nth($colors, -1);
    $new : append($fruits, $size);
    @debug $new;
    $count : index($fruits, 'melon');
    &:nth-child(#{$count}) {
        color:red;
    }
}

$imgList : 'alert','profile','logout','login';

@for $i from 1 through length($imgList) {
    li:nth-child(#{$i}) {
        background-image:url(nth($imgList, $i) + '.png')
    }
}

/*
@debug nth(10px 12px 16px, 2);
@debug nth($colors, -2);
*/


$url : 'AbcDe.jpg';
$not : unquote($url);
.box {
    background-image:url(quote($not));
}

@debug to-upper-case($url);
@debug to-lower-case($url);
@debug str-index($url, 'D');

$numbers : 1, 100,20,30,21;
@debug min($numbers...);
@debug max($numbers...);

$num : calc(random() * 10);
@debug $num;
@debug ceil($num); 

@debug math.min($numbers...);

$a : -1;
$b : 1;
@debug abs($a);
@debug abs($b);


$text : 'AbcDe.jpg';
@debug str-index($text, 'D');
@debug str-slice($text, -1, 3);
// img[src$='.jpg']
.box {
    background-color:mix(red,blue);
}

$x : 30px;
$y : 40em;
@debug unit($x);
@debug unitless($y);

@function sum($a, $b) {
    @return calc($a + $b);
}


@debug 'compare:', comparable($x,$y);

@function unitcheck($value) {
    @if (unitless($value)) {
        @return $value + px;
    }@else{
        @return $value
    }
}

@debug unitcheck(30);
@debug unitcheck(30%);

@mixin font ($f, $l:null, $w:null) { 
    font-size: unitcheck($f); 

    @if( $f > 24) {
        color:red;
        letter-spacing:-1px;
    }
    line-height: $l;
    font-weight: $w;

    // @include media($mobile) {
    //     $f : $f * 0.5 + vw;
    // }
}

.p {
    // font-family:'roboto',sans-serif;
    // font-size:20px;
    // line-height:1.5;
    // font-weight:600;
    // font-style:italic;
    // font-variant:small-caps;

    font:900 italic 20px/1.5 'roboto',sans-serif;
   
    /*
    font:  {
        family:'roboto',sans-serif;
        size:20px;
        weight:600;
        style:italic;
    };
    */

    background : {
        image:url('a.jpg');
        color : red;
        position:left top;
        size: cover;
    }

    background:red  url(a.jpg) left top/cover;
    
     
}
.txt1 {
    @include font(30, 1.2, 300);
    width: sum(30px,50%); 
}
.txt2 {
    @include font(20);
}
@function vWidth($s, $c, $w:100%){
    $s: unitcheck($s);
    $w: unitcheck($w);
    @return calc(($w - ($c - 1)* $s) / $c);
}

.listBox {
    width:100%;
    max-width:900px;
    outline:1px solid red;
    margin:50px auto;
    display:flex;
    justify-content:space-between;
    padding:0;list-style:none;
}

.listBox li {
    padding:0;margin:0;
    background-color:gold;
    // width: calc( (100% - 40px) / 3 );
    width:vWidth(15, 5);
}

@mixin icon($img, $size:24px, $bg:null) {
    background:$bg url($imageUrl + 'icon_' + $img + '.svg') no-repeat center center/contain;
    width: $size;
    height: $size;
}

.icon{
    @include icon('earth', $bg:yellow);
}


.icons li {
    $types : 'home','earth','search';

    // &:nth-child(#{i })
    // @include icon($name);

}
